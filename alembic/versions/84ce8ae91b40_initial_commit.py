"""Initial commit

Revision ID: 84ce8ae91b40
Revises:
Create Date: 2022-05-18 00:41:47.157789

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "84ce8ae91b40"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "region",
        sa.Column("id", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sector_industry",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sector_division",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("sector_industry_id", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["sector_industry_id"],
            ["sector_industry.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sub_region",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("subregion_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["subregion_id"], ["region.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "country",
        sa.Column("id", sa.CHAR(length=2), nullable=False),
        sa.Column("subregion_id", sa.Text(), nullable=True),
        sa.Column("calling_code", sa.Integer(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("other_names", sa.Text(), nullable=True),
        sa.Column("motto", sa.Text(), nullable=True),
        sa.Column("date_of_independence", sa.Date(), nullable=True),
        sa.Column("introduction", sa.Text(), nullable=True),
        sa.Column("location", sa.Text(), nullable=True),
        sa.Column("neighbours", sa.Text(), nullable=True),
        sa.Column("capital_city", sa.Text(), nullable=True),
        sa.Column("population", sa.Float(precision=53), nullable=True),
        sa.Column("languages", sa.Text(), nullable=True),
        sa.Column("facts_and_figures", sa.Text(), nullable=True),
        sa.Column("classification", sa.Text(), nullable=True),
        sa.Column("life_expectancy", sa.Float(), nullable=True),
        sa.Column("median_age", sa.Float(), nullable=True),
        sa.Column("average_children", sa.Float(), nullable=True),
        sa.Column("income_group", sa.Text(), nullable=True),
        sa.Column("employment_rate", sa.Float(), nullable=True),
        sa.Column("unemployment_rate", sa.Float(), nullable=True),
        sa.Column("contribution_men", sa.Float(), nullable=True),
        sa.Column("contribution_women", sa.Float(), nullable=True),
        sa.Column("gdp_2019", sa.Float(precision=53), nullable=True),
        sa.Column("gdp_per_capita", sa.Float(), nullable=True),
        sa.Column("growth_of_gdp", sa.Float(), nullable=True),
        sa.Column("inflation", sa.Float(), nullable=True),
        sa.Column("investment", sa.Float(), nullable=True),
        sa.Column("total_debt", sa.Float(), nullable=True),
        sa.Column("gnp_per_capita", sa.Float(), nullable=True),
        sa.Column("corruption_rank", sa.Float(), nullable=True),
        sa.Column("credit_rank", sa.Float(), nullable=True),
        sa.Column("business_score", sa.Float(), nullable=True),
        sa.Column("key_sectors_growth", sa.Text(), nullable=True),
        sa.Column("key_issues", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["subregion_id"], ["sub_region.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sector_group",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("sector_division_id", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["sector_division_id"],
            ["sector_division.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "country_contact",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("country_id", sa.CHAR(length=2), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("govt_contact", sa.Text(), nullable=True),
        sa.Column("economic_contact", sa.Text(), nullable=True),
        sa.Column("parliament_contact", sa.Text(), nullable=True),
        sa.Column("judiciary_contact", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"], ["country.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "country_document",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("country_id", sa.CHAR(length=2), nullable=True),
        sa.Column("document_type", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("filesize", sa.Integer(), nullable=True),
        sa.Column("filetype", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"], ["country.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sector",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("sector_group_id", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["sector_group_id"],
            ["sector_group.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "country_sector",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("country_id", sa.CHAR(length=2), nullable=True),
        sa.Column("sector_id", sa.Text(), nullable=True),
        sa.Column("contribution_to_gdp", sa.Float(), nullable=True),
        sa.Column("growth_rate", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"], ["country.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["sector_id"], ["sector.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("country_sector")
    op.drop_table("sector")
    op.drop_table("country_document")
    op.drop_table("country_contact")
    op.drop_table("sector_group")
    op.drop_table("country")
    op.drop_table("sub_region")
    op.drop_table("sector_division")
    op.drop_table("sector_industry")
    op.drop_table("region")
    # ### end Alembic commands ###
